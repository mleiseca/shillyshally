
- reporting for work done

- add project deadline
- add task priority


- timeout style break timing
- screen overlay example: FunkyOverlayWindow

- how do you retain user preference information so that windows open in the same place?

- if you are making data model changes, how do you migrate the changes?

- maybe display seconds for currently running task?

How do I get undo/redo for free in my non-document-architecture-based app?
In a Core Data document-based application, the standard NSDocument undo manager is replaced by the document’s managed object context’s undo manager. In a non-document-based application for desktop Mac OS X, your window’s delegate can supply the managed object context’s undo manager using the windowWillReturnUndoManager: delegate method. If your window delegate has an accessor method for the managed object context (as is the case if you use the Core Data Application template), your implementation of windowWillReturnUndoManager: might be as follows.
- (NSUndoManager *)windowWillReturnUndoManager:(NSWindow *)sender {
    return [[self managedObjectContext] undoManager];
}
--------------------------------------------------------------------------------------------------------------------------------

- "done" with running task doesn't stop timer
- change dock/tab icon depending on state (ie, working = green clock, not working = red clock)

- copy row in table: (ie, when row is selected, hitting command-c will copy a nicely formatted commit message with hours estimate and ticket)
  - subclass table view (http://www.cocoabuilder.com/archive/cocoa/115492-copy-paste-in-nstableview.html)
  - - (IBAction) copy:(id)sender {
		NSLog(@"Copy");
	}


- adding project support
 -> shortcut for project dropdown in table?

- add groups for tasks
 -> this requires a screen to enter groups / manage reference data

